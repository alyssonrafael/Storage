// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id       String   @id @default(uuid())
  name     String
  email    String   @unique
  password String
  role      String   @default("USER")
  vendas    Venda[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Produto {
  id          Int       @id @default(autoincrement())
  nome        String
  preco       Float
  quantidade  Int
  disponivel  Boolean
  categoriaId Int
  categoria   Categoria @relation(fields: [categoriaId], references: [id])
  vendas      VendaProduto[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deleted     Boolean   @default(false)
}

model Categoria {
  id        Int       @id @default(autoincrement())
  nome      String
  produtos  Produto[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deleted   Boolean   @default(false)
}

model Venda {
  id               Int             @id @default(autoincrement())
  data             DateTime        @default(now())
  total            Float
  desconto         Float           @default(0.0)
  produtos         VendaProduto[]
  userId           String
  user             User            @relation(fields: [userId], references: [id])
  observacao       String?
  formaDePagamento String
  deleted          Boolean         @default(false)
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
}

model VendaProduto {
  id         Int             @id @default(autoincrement())
  venda      Venda           @relation(fields: [vendaId], references: [id])
  vendaId    Int
  produto    Produto         @relation(fields: [produtoId], references: [id])
  produtoId  Int
  quantidade Int
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
}